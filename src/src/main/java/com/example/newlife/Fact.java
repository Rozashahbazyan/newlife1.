package com.example.newlife;
//
//import android.content.Intent;
//import android.os.Bundle;
//import android.util.Log;
//import android.widget.TextView;
//import android.widget.Toast;
//
//import androidx.annotation.NonNull;
//import androidx.appcompat.app.AppCompatActivity;
//
//import com.google.android.material.bottomnavigation.BottomNavigationView;
//import com.google.firebase.database.DataSnapshot;
//import com.google.firebase.database.DatabaseError;
//import com.google.firebase.database.DatabaseReference;
//import com.google.firebase.database.FirebaseDatabase;
//import com.google.firebase.database.ValueEventListener;
//
//import java.util.ArrayList;
//import java.util.List;
//import java.util.Random;
//
//public class Fact extends AppCompatActivity {
//    private DatabaseReference databaseReference;
//    private TextView factTextView;
//
//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        setContentView(R.layout.activity_fact);
//
//        factTextView = findViewById(R.id.factTextView);
//
//        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Realtime Database
//        databaseReference = FirebaseDatabase.getInstance().getReference("facts");
//
//        loadRandomFact();
//
//        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ BottomNavigationView
//        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNavigationView);
//        bottomNavigationView.setSelectedItemId(R.id.navigation_facts);
//        bottomNavigationView.setOnItemSelectedListener(item -> {
//            int id = item.getItemId();
//            if (id == R.id.nav_statistics) {
//                startActivity(new Intent(Fact.this, Static.class));
//                finish();
//                return true;
//            } else if (id == R.id.nav_home1) {
//                startActivity(new Intent(Fact.this, Home.class));
//                finish();
//                return true;
//            }
//            return false;
//        });
//    }
//
//    private void loadRandomFact() {
//        databaseReference.addListenerForSingleValueEvent(new ValueEventListener() {
//            @Override
//            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
//                if (dataSnapshot.exists()) {
//                    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–∫—Ç—ã –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
//                    List<String> facts = new ArrayList<>();
//                    for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
//                        String fact = snapshot.getValue(String.class);
//                        if (fact != null) {
//                            facts.add(fact);
//                        }
//                    }
//
//                    // –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç
//                    if (!facts.isEmpty()) {
//                        Random random = new Random();
//                        String randomFact = facts.get(random.nextInt(facts.size()));
//                        factTextView.setText(randomFact);
//                    } else {
//                        factTextView.setText("–§–∞–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç");
//                    }
//                } else {
//                    factTextView.setText("–§–∞–∫—Ç–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç");
//                }
//            }
//
//            @Override
//            public void onCancelled(@NonNull DatabaseError databaseError) {
//                Toast.makeText(Fact.this, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–∫—Ç–æ–≤", Toast.LENGTH_SHORT).show();
//                Log.e("FactActivity", "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö", databaseError.toException());
//            }
//        });
//    }
//}
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.bottomnavigation.BottomNavigationView;

import java.util.ArrayList;
import java.util.List;

public class Fact extends AppCompatActivity {

    private RecyclerView recyclerView;
    private PersonAdapter adapter;
    private List<Person> personList;
    private TextView tvNoData;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_fact);

        // Initialize RecyclerView and set LayoutManager
        recyclerView = findViewById(R.id.recyclerView);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));
        tvNoData = findViewById(R.id.tvNoData);

        personList = new ArrayList<>();
        adapter = new PersonAdapter(personList);
        recyclerView.setAdapter(adapter);

        // Load famous habits
        loadFamousHabits();

        // Set up BottomNavigationView for navigation
        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNavigationView);
        bottomNavigationView.setSelectedItemId(R.id.navigation_facts);
        bottomNavigationView.setOnItemSelectedListener(item -> {
            int id = item.getItemId();
            if (id == R.id.nav_statistics) {
                startActivity(new Intent(Fact.this, Static.class));
                finish();
                return true;
            } else if (id == R.id.nav_home1) {
                startActivity(new Intent(Fact.this, Home.class));
                finish();
                return true;
            }
            return false;
        });

        // Set up the click listener for the items in the RecyclerView
        adapter.setOnItemClickListener(position -> {
            String habitToAdd = personList.get(position).getHabit();

            // Return the selected habit to the Home activity
            Intent resultIntent = new Intent();
            resultIntent.putExtra("habit_name", habitToAdd);
            setResult(RESULT_OK, resultIntent);
            finish();
        });
    }

    // Method to load famous habits into the list
    private void loadFamousHabits() {
        personList.add(new Person("üé∏ –≠–¥–≤–∞—Ä–¥ –®—Ä–µ–¥–µ—Ä", "–ò–≥—Ä–∞–µ—Ç –Ω–∞ –≥–∏—Ç–∞—Ä–µ 30 –º–∏–Ω—É—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"));
        personList.add(new Person("üèûÔ∏è –†–∏—á–∞—Ä–¥ –ë—Ä—ç–Ω—Å–æ–Ω", "–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø—Ä–æ–≥—É–ª–∫–∞–º–∏"));
        personList.add(new Person("üí° –¢–æ–º–∞—Å –≠–¥–∏—Å–æ–Ω", "–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–¥ –Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–µ—Ç–µ–Ω–∏—è–º–∏ –ø–æ 10 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å"));
        personList.add(new Person("üìö –£–æ—Ä—Ä–µ–Ω –ë–∞—Ñ—Ñ–µ—Ç", "–ß–∏—Ç–∞–µ—Ç 500 —Å—Ç—Ä–∞–Ω–∏—Ü –≤ –¥–µ–Ω—å"));
        personList.add(new Person("üí™ –î–∂–µ–π—Å–æ–Ω –°—Ç—ç—Ç—Ö—ç–º", "–¢—Ä–µ–Ω–∏—Ä—É–µ—Ç—Å—è 6 –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª—é"));
        personList.add(new Person("üåç –ú–∞—Ö–∞—Ç–º–∞ –ì–∞–Ω–¥–∏", "–ú–µ–¥–∏—Ç–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"));
        personList.add(new Person("üë®‚Äçüíª –°—Ç–∏–≤ –î–∂–æ–±—Å", "–ù–∞—á–∏–Ω–∞–µ—Ç –¥–µ–Ω—å —Å –π–æ–≥–∏ –∏ –º–µ–¥–∏—Ç–∞—Ü–∏–∏"));
        personList.add(new Person("üìù –í–∏—Ä–¥–∂–∏–Ω–∏—è –í—É–ª—Ñ", "–ü–∏—à–µ—Ç 2-3 —á–∞—Å–∞ –≤ –¥–µ–Ω—å"));
        personList.add(new Person("üö¥‚Äç‚ôÇÔ∏è –ö—Ä–∏—à—Ç–∏–∞–Ω—É –†–æ–Ω–∞–ª–¥—É", "–ó–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–µ–ª–æ—Å–ø–æ—Ä—Ç–æ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"));
        personList.add(new Person("üéØ –ú–∞—Ä–∫ –¶—É–∫–µ—Ä–±–µ—Ä–≥", "–ü–ª–∞–Ω–∏—Ä—É–µ—Ç —Å–≤–æ—é –Ω–µ–¥–µ–ª—é –ø–æ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞–º"));
        personList.add(new Person("üßò‚Äç‚ôÄÔ∏è –û–ø—Ä–∞ –£–∏–Ω—Ñ—Ä–∏", "–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫—É –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏"));
        personList.add(new Person("üé§ –î–∂–æ–Ω –õ–µ–Ω–Ω–æ–Ω", "–ü–∏—à–µ—Ç –ø–µ—Å–Ω–∏ –∏ –º—É–∑—ã–∫—É –ø–æ —É—Ç—Ä–∞–º"));
        personList.add(new Person("üìà –ë–µ–Ω–∂–∞–º–∏–Ω –ì—Ä—ç–º", "–ü—Ä–æ–≤–æ–¥–∏—Ç —á–∞—Å –≤ –¥–µ–Ω—å –∑–∞ –∏–∑—É—á–µ–Ω–∏–µ–º —Ä—ã–Ω–∫–æ–≤"));
        personList.add(new Person("üñãÔ∏è –ê–≥–∞—Ç–∞ –ö—Ä–∏—Å—Ç–∏", "–ü–∏—à–µ—Ç –∫–Ω–∏–≥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å"));
        personList.add(new Person("üëì –ú—ç—Ä–∏ –ö—é—Ä–∏", "–ß–∏—Ç–∞–µ—Ç –Ω–∞—É—á–Ω—ã–µ —Ä–∞–±–æ—Ç—ã –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä"));


        adapter.notifyDataSetChanged();

        if (personList.isEmpty()) {
            tvNoData.setVisibility(View.VISIBLE);
        } else {
            tvNoData.setVisibility(View.GONE);
        }
    }

}
